name: App push to Console

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Frogobox ID
  DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
  DO_SPACES_SECRET: ${{ secrets.DO_SPACES_SECRET }}

on:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          #cache: 'gradle'
          
      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v2
        with:
          #gradle-version: 6.5
          gradle-home-cache-cleanup: true

      - name: Change gradlew permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      - name: Build prodRelease
        run: ./gradlew app:bundleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Upload app bundle as artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: app/build/outputs/bundle/release/app-release.aab

  deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
  
        - name: Download app bundle from artifact
          uses: actions/download-artifact@v2
          with:
            name: app-bundle
      #---------------------------------------------------------------------------
      # Create APK Debug
      # - name: Build apk debug project (APK)
      #   run: ./gradlew assembleDebug

      # - name: Encode and Decode Keystore
      #   run: |
      #     # Encode the keystore file as base64 and store it as a variable
      #     KEYSIGNER_KEYSTORE_BASE64=$(cat /config/config.jks | base64)

      #     # Save the base64 content to a file
      #     echo "$KEYSIGNER_KEYSTORE_BASE64" | base64 --decode > keystore.jks

      # # Create APK Release
      # - name: Build apk release project (APK)
      #   # run: ./gradlew assemble
      #   # run: ./gradlew signingConfig
      #   # run: ./gradlew bundleRelease #WORKING FLOW WITH CONFIG
      #   run: ./gradlew assembleRelease
      #   # env:
      #   #   KEYSTORE: keystore.jks
      #   #   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      #   #   KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      #   #   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      # # Create Bundle AAB Release
      # # Noted for main module build [main_project_module]:bundleRelease
      # - name: Build app bundle release (AAB) - app module
      #   # run: ./gradlew app:bundleRelease
      #   run: ./gradlew bundleRelease

      # # Upload Artifact Build
      # # Noted For Output [main_project_module]/build/outputs/apk/debug/
      # - name: Upload APK Debug - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.date_today }} - ${{ env.repository_name }} - APK(s) debug generated
      #     path: app/build/outputs/apk/debug/

      # # Noted For Output [main_project_module]/build/outputs/apk/release/
      # - name: Upload APK Release - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.date_today }} - ${{ env.repository_name }} - APK(s) release generated
      #     path: app/build/outputs/apk/release/

      # # Noted For Output [main_project_module]/build/outputs/bundle/release/
      # - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
        
      #   with:
      #     name: ${{ env.date_today }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
      #     path: app/build/outputs/bundle/release/
