name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Frogobox ID
  DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
  DO_SPACES_SECRET: ${{ secrets.DO_SPACES_SECRET }}

on:
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - app module
        run: ./gradlew assembleDebug

      # Create APK Release
      # - name: Build apk release project (APK) - app module
      #   run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      # - name: Build app bundle release (AAB) - app module
      #   run: ./gradlew app:bundleRelease

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      - name: Upload APK Debug - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) debug generated
          path: app/build/outputs/apk/debug/

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      # - name: Upload APK Release - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
      #     path: app/build/outputs/apk/release/

      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      # - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
      #     path: app/build/outputs/bundle/release/

      - name: List APK files
        run: |
          ls -R app/build/outputs/apk/debug/

      - name: Install s3cmd
        run: |
          # Install s3cmd using apt-get
          # sudo apt-get update -q
          # sudo apt-get install -y s3cmd
          pip install awscli

      - name: Configure s3cmd
        run: |
          # Configure s3cmd with your DigitalOcean Spaces credentials
          # echo "access_key = $DO_SPACES_KEY" >> ~/.s3cfg
          # echo "secret_key = $DO_SPACES_SECRET" >> ~/.s3cfg
          aws configure set aws_access_key_id ${{ secrets.DO_SPACES_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.DO_SPACES_SECRET }}
          aws configure set default.region us-east-1

      - name: Upload to DigitalOcean Spaces
        run: |
          # Upload files to your DigitalOcean Spaces bucket using s3cmd
          s3cmd put app/build/outputs/apk/debug/app-debug.apk s3://origin.nyc3.digitaloceanspaces.com/APKs/app-debug.apk
